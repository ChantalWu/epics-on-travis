language: cpp

env:
  matrix:
    - BASE=R3.14.12.6 PVA= BUSY=1-6-1 SEQ=2.2.5 ASYN=4-32 CALC=3-7 AUTOSAVE=5-9 SSCAN=2-11-1 MOTOR=6-9 AREADETECTOR=3-2 STATIC_BUILD=YES
    - BASE=R3.15.5 PVA=4.7.0 BUSY=1-6-1 SEQ=2.2.5 ASYN=4-32 CALC=3-7 AUTOSAVE=5-9 SSCAN=2-11-1 MOTOR=6-9 AREADETECTOR=3-2 STATIC_BUILD=YES
    - BASE=R3.16.1 PVA=4.7.0 BUSY=1-6-1 SEQ=2.2.5 ASYN=4-32 CALC=3-7 AUTOSAVE=5-9 SSCAN=2-11-1 MOTOR=6-10 AREADETECTOR=3-2 STATIC_BUILD=YES
    - BASE=R7.0.1.1 PVA= BUSY=1-7 SEQ=2.2.5 ASYN=4-33 CALC=3-7 AUTOSAVE=5-9 SSCAN=2-11-1 MOTOR=6-10 AREADETECTOR=3-2 STATIC_BUILD=YES


dist: trusty
addons:
  apt:
    packages:
      - perl
      - re2c
      - autoconf  # pvaPy
      - libboost-all-dev  # pvaPy
      - procserv  # optional, used by ci-scripts/run-epics-iocs-on-procserv.sh

cache:
  directories:
    - $HOME/.cache/epics
    - $HOME/.ccache  # https://github.com/travis-ci/travis-ci/issues/5853

script:
  - export CI_SCRIPTS="${TRAVIS_BUILD_DIR}/ci-scripts"
  - source "${CI_SCRIPTS}/epics-config.sh"
  - bash "${CI_SCRIPTS}/install-epics-base.sh"
  - if [[ ! -z "${PVA}" ]]; then 
        bash "${CI_SCRIPTS}/install-epics-v4.sh";
    fi
  - bash "${CI_SCRIPTS}/install-epics-modules.sh"
  - if [[ ! -z "${AREADETECTOR}" ]]; then
        bash "${CI_SCRIPTS}/install-epics-areadetector.sh";
    fi
  - bash "${CI_SCRIPTS}/install-epics-iocs.sh"

  # for projects using the pyepics test IOC and motorsim IOC:
  # - bash "${CI_SCRIPTS}/run-epics-iocs-on-procserv.sh"
  # - pip install pyepics numpy
  # - bash ${CI_SCRIPTS}/run-pyepics-simulator.sh procserv

  - export VERSION_TAG=${BASE}_pva${PVA}_areadetector${AREADETECTOR}_motor${MOTOR}
  - export FILE_TO_UPLOAD="${TRAVIS_BUILD_DIR}/epics-ci-${TRAVIS_TAG}_${VERSION_TAG}.tar.bz2"
  - tar cfj ${FILE_TO_UPLOAD} ${EPICS_ROOT} 

deploy:
    provider: releases
    api_key: $GITHUB_OAUTH_TOKEN
    skip_cleanup: true
    file_glob: true
    file: "${FILE_TO_UPLOAD}"
    on:
      tags: true
